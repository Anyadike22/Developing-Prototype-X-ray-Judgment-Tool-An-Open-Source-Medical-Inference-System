# -*- coding: utf-8 -*-
"""Build a Prototype X-ray Judgment Tool (An Open Source Medical Inference System) .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IPdeYgCYSsWGqW-pa9yGlbtKDCIU6yT_
"""

!pip install torchxrayvision gradio

import torch
import torchxrayvision as xrv
import torchvision.transforms as transforms
import gradio as gr

model = xrv.models.DenseNet(weights="densenet121-res224-all")
model.eval()

try:
    pathology_labels = model.meta["labels"]
    print("Retrieved pathology labels from model.meta.")
except Exception as e:
    print("Could not retrieve labels from model.meta. Using fallback labels.")
    pathology_labels = [
         "Atelectasis", "Cardiomegaly", "Consolidation", "Edema",
         "Emphysema", "Fibrosis", "Hernia", "Infiltration", "Mass",
         "Nodule", "Pleural Effusion", "Pneumonia", "Pneumothorax", "No Finding"
    ]

def classify_xray(image):
    try:
        transform = transforms.Compose([
            transforms.Resize((224, 224)),
            transforms.Grayscale(num_output_channels=1),
            transforms.ToTensor()
        ])
        input_tensor = transform(image).unsqueeze(0)  # add batch dimension


        with torch.no_grad():
            preds = model(input_tensor)

        pathology_scores = preds[0].detach().numpy()
        results = {}
        for idx, label in enumerate(pathology_labels):
            results[label] = float(pathology_scores[idx])

        sorted_results = sorted(results.items(), key=lambda x: x[1], reverse=True)
        top_label, top_score = sorted_results[0]

        judgement = (
            f"Prediction: {top_label} (score: {top_score:.2f})nn"
            f"Full Scores:n{results}"
        )
        return judgement
    except Exception as e:
        return f"Error during inference: {str(e)}"

iface = gr.Interface(
    fn=classify_xray,
    inputs=gr.Image(type="pil"),
    outputs="text",
    title="X-ray Judgement Tool (Prototype)",
    description=(
        "Upload a chest X-ray image to receive a classification judgement. "
        "This demo is for educational purposes only and is not intended for clinical use."
    )
)


iface.launch()